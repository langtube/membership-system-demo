{"version":3,"sources":["libs/api/constants.ts","libs/api/auth.ts","libs/api/api-result.ts","libs/api/team-members.ts","libs/api/workspaces.ts","libs/api/server.exception.dto.ts","libs/api/api-error.ts","libs/http-client.ts","libs/swr.tsx","libs/session.ts","layout/HeaderRight.tsx","layout/Layout.tsx","pages/Signin.tsx","pages/UserProfile.tsx","pages/TeamMembers.tsx","pages/Workspaces.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["signinUrl","signinApiUrl","apiBaseUrl","profileApiUrl","teamMembersApiUrl","workspacesApiUrl","signin","data","a","httpClient","post","json","throwHttpErrors","response","result","ok","message","error","ApiResult","this","undefined","mutateTeamMembers","mutate","addTeamMember","email","success","failed","deleteTeamMember","id","delete","mutateWorkspaces","addWorkspace","name","deleteWorkspace","ApiError","dto","reason","status","validationErrors","Error","ky","create","credentials","extend","hooks","beforeError","err","console","document","location","replace","SWRGlobalConfig","children","value","fetcher","url","get","revalidateOnFocus","useUserSessionStore","set","user","init","fetchProfile","clear","HeaderRight","history","useHistory","clearSession","s","handleSwitchUser","style","height","padding","danger","type","onClick","icon","UserSwitchOutlined","Layout","useLocation","useState","loading","setLoading","initUserSession","useEffect","to","pathname","state","from","routes","path","UserOutlined","TeamOutlined","hideInMenu","Object","hasOwn","accessTags","AppstoreOutlined","ToolOutlined","logo","title","route","menu","defaultOpenAll","menuItemRender","item","dom","rightContentRender","Signin","onSignin","role","username","password","paddingTop","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","LoginForm","process","subTitle","submitter","map","block","size","marginBottom","toUpperCase","UserProfilePage","store","keys","key","TeamMembers","useSWR","isValidating","onDelete","setConfirmLoading","confirmLoading","columns","dataIndex","valueType","width","render","_","onConfirm","okButtonProps","search","dataSource","rowKey","pagination","pageSize","showQuickJumper","showSizeChanger","request","dateFormatter","toolbar","toolBarRender","AddMemberFormModal","formRef","useRef","ModalForm","trigger","PlusOutlined","autoFocusFirstInput","submitTimeout","onVisibleChange","visible","current","resetFields","onFinish","values","find","x","label","placeholder","Workspaces","AddWorkspaceFormModal","Routes","App","locale","zhCN","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d67c94f.chunk.js","sourcesContent":["export const signinUrl = \"/auth/signin\";\n\nexport const apiBaseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport const signinApiUrl = apiBaseUrl + \"/auth/signin\";\nexport const profileApiUrl = apiBaseUrl + \"/user/profile\";\n\nexport const teamMembersApiUrl = apiBaseUrl + \"/team-members\";\nexport const workspacesApiUrl = apiBaseUrl + \"/workspaces\";\n","import { message } from \"antd\";\n\nimport { httpClient } from \"../http-client\";\nimport { signinApiUrl } from \"./constants\";\n\nexport async function signin(data: any) {\n  try {\n    const response = await httpClient.post(signinApiUrl, {\n      json: data,\n      throwHttpErrors: false,\n    });\n\n    const result = await response.json();\n    if (response.ok) {\n      return result;\n    }\n  } catch (e: any) {\n    message.error(\"登陆失败：\" + e?.message, 5000);\n  }\n}\n","import { ApiError } from \"./api-error\";\n\nexport class ApiResult<T> {\n  ok: boolean;\n  data?: T;\n  error?: ApiError;\n\n  constructor(ok: boolean, data?: T, error?: ApiError) {\n    this.ok = ok;\n    this.data = data;\n    this.error = error;\n  }\n\n  static success<T>(data: T) {\n    return new ApiResult(true, data);\n  }\n\n  static failed(error: ApiError) {\n    return new ApiResult(false, undefined, error);\n  }\n}\n","import useSWR, { mutate } from \"swr\";\n\nimport { httpClient } from \"../http-client\";\nimport { ApiResult } from \"./api-result\";\nimport { teamMembersApiUrl } from \"./constants\";\n\nexport type TeamMember = {\n  id: string;\n  ownerId: string;\n  email: string;\n  createdAt: Date;\n};\n\nexport function useTeamMembers() {\n  return useSWR(teamMembersApiUrl);\n}\n\nexport async function mutateTeamMembers() {\n  await mutate(teamMembersApiUrl);\n}\n\nexport async function addTeamMember(email: string) {\n  try {\n    const response = await httpClient.post(teamMembersApiUrl, {\n      json: { email },\n    });\n    const result = await response.json();\n    return ApiResult.success(result);\n  } catch (error: any) {\n    return ApiResult.failed(error);\n  }\n}\n\nexport async function deleteTeamMember(id: string) {\n  try {\n    const response = await httpClient.delete(teamMembersApiUrl, {\n      json: { id },\n    });\n    const result = await response.json();\n    return ApiResult.success(result);\n  } catch (error: any) {\n    return ApiResult.failed(error);\n  }\n}\n","import useSWR, { mutate } from \"swr\";\n\nimport { httpClient } from \"../http-client\";\nimport { ApiResult } from \"./api-result\";\nimport { workspacesApiUrl } from \"./constants\";\n\nexport type Workspace = {\n  id: string;\n  ownerId: string;\n  name: string;\n  createdAt: Date;\n};\n\nexport function useWorkspaces() {\n  return useSWR(workspacesApiUrl);\n}\n\nexport async function mutateWorkspaces() {\n  await mutate(workspacesApiUrl);\n}\n\nexport async function addWorkspace(name: string) {\n  try {\n    const response = await httpClient.post(workspacesApiUrl, {\n      json: { name },\n    });\n    const result = await response.json();\n    return ApiResult.success(result);\n  } catch (e: any) {\n    return ApiResult.failed(e);\n  }\n}\n\nexport async function deleteWorkspace(id: string) {\n  try {\n    const response = await httpClient.delete(workspacesApiUrl, {\n      json: { id },\n    });\n    const result = await response.json();\n    return ApiResult.success(result);\n  } catch (e: any) {\n    return ApiResult.failed(e);\n  }\n}\n","export class ServerExceptionDto {\n  public status: number;\n  public message: string;\n  public name: string;\n  public validationErrors?: ValidationExceptionField[];\n\n  constructor(\n    status: number,\n    message: string,\n    name?: string,\n    validationErrors?: ValidationExceptionField[]\n  ) {\n    this.status = status;\n    this.message = message;\n    this.name = name || \"Error\";\n    this.validationErrors = validationErrors;\n  }\n}\n\nexport class ValidationExceptionField {\n  constructor(public name: string, public errors: string[]) {}\n}\n","import {\n  ServerExceptionDto,\n  ValidationExceptionField,\n} from \"./server.exception.dto\";\n\nexport class ApiError extends Error {\n  public status: number;\n  public name: string;\n  public validationErrors?: ValidationExceptionField[];\n\n  constructor(dto: ServerExceptionDto) {\n    const reason = dto.message\n      ? dto.message\n      : `${dto.status}, an unknown error`;\n    super(`${dto.name}: ${reason}`);\n\n    this.status = dto.status;\n    this.name = \"ApiError\";\n    this.validationErrors = dto.validationErrors;\n  }\n}\n","import ky, { HTTPError } from \"ky\";\nimport { ServerExceptionDto, signinUrl } from \"./api\";\nimport { ApiError } from \"./api/api-error\";\n\nexport const httpClient = ky\n  .create({\n    credentials: \"include\",\n  })\n  .extend({\n    hooks: {\n      beforeError: [\n        async (err: HTTPError) => {\n          console.error(\"ky beforeError: \", err);\n          if (err.response.status === 401 || err.response.status === 403) {\n            document.location.replace(signinUrl);\n          }\n          const result: ServerExceptionDto = await err.response.json();\n          throw new ApiError(result);\n        },\n      ],\n    },\n  });\n","import { SWRConfig } from \"swr\";\n\nimport { httpClient } from \"./http-client\";\n\nexport const SWRGlobalConfig = ({ children }: any) => {\n  return (\n    <SWRConfig\n      value={{\n        fetcher: async (url) => {\n          try {\n            const response = await httpClient.get(url);\n            const result = await response.json();\n            return result;\n          } catch (e: any) {\n            throw e;\n          }\n        },\n        revalidateOnFocus: false,\n      }}\n    >\n      {children}\n    </SWRConfig>\n  );\n};\n","import { message } from \"antd\";\nimport create from \"zustand\";\n\nimport { profileApiUrl } from \"./api/constants\";\nimport { httpClient } from \"./http-client\";\n\nexport type User = {\n  id: string;\n  role: string;\n  accessTags: Record<string, string | number>;\n};\n\nexport type UserSessionStore = {\n  user: User | null;\n  init: () => Promise<void>;\n  clear: () => void;\n};\n\nexport const useUserSessionStore = create<UserSessionStore>((set, get) => ({\n  user: null,\n  init: async () => {\n    let user = get().user;\n    if (!user) {\n      user = await fetchProfile();\n      if (user) {\n        set({ user });\n      }\n    }\n  },\n  clear: () => {\n    set({ user: null });\n    return true;\n  },\n}));\n\nasync function fetchProfile() {\n  try {\n    const response = await httpClient.get(profileApiUrl);\n    const result = await response.json();\n    if (response.ok) {\n      return result;\n    }\n  } catch (e: any) {\n    message.error(\"获取用户数据失败 \" + e?.message);\n  }\n}\n","import { Button } from \"antd\";\nimport { UserSwitchOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useUserSessionStore } from \"../libs/session\";\n\nexport function HeaderRight() {\n  const history = useHistory();\n\n  const clearSession = useUserSessionStore((s) => s.clear);\n\n  const handleSwitchUser = async () => {\n    clearSession();\n    history.replace(\"/\");\n  };\n  return (\n    <div style={{ height: \"100%\", padding: 4 }}>\n      <Button\n        danger\n        type=\"primary\"\n        onClick={handleSwitchUser}\n        icon={<UserSwitchOutlined />}\n      >\n        切换用户\n      </Button>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  UserOutlined,\n  ToolOutlined,\n  TeamOutlined,\n  AppstoreOutlined,\n} from \"@ant-design/icons\";\nimport ProLayout from \"@ant-design/pro-layout\";\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\n\nimport { useUserSessionStore } from \"../libs/session\";\nimport { HeaderRight } from \"./HeaderRight\";\nimport { signinUrl } from \"../libs/api\";\n\nexport function Layout({ children }: any) {\n  const location = useLocation();\n\n  const [loading, setLoading] = useState(true);\n\n  const user = useUserSessionStore((s) => s.user);\n  const initUserSession = useUserSessionStore((s) => s.init);\n\n  useEffect(() => {\n    (async () => {\n      await initUserSession();\n      setLoading(false);\n    })();\n  }, [initUserSession]);\n\n  if (loading) {\n    return null;\n  }\n\n  if (!user) {\n    return (\n      <Redirect\n        to={{\n          pathname: signinUrl,\n          state: { from: location.pathname },\n        }}\n      />\n    );\n  }\n\n  const routes = {\n    path: \"/\",\n    routes: [\n      {\n        name: \"User Profile\",\n        icon: <UserOutlined />,\n        path: \"/user/profile\",\n      },\n      {\n        name: \"Team Members\",\n        icon: <TeamOutlined />,\n        path: \"/team-members\",\n        hideInMenu: !Object.hasOwn(user.accessTags, \"access-team-member\"),\n      },\n      {\n        name: \"Workspace\",\n        icon: <AppstoreOutlined />,\n        path: \"/workspaces\",\n        hideInMenu: !Object.hasOwn(user.accessTags, \"access-workspace\"),\n      },\n      {\n        name: \"Another Service\",\n        icon: <ToolOutlined />,\n        path: \"/public-service\",\n      },\n    ],\n  };\n\n  return (\n    <div\n      id=\"test-pro-layout\"\n      style={{\n        height: \"100vh\",\n      }}\n    >\n      <ProLayout\n        logo={null}\n        title={\"App name\"}\n        route={routes}\n        menu={{ defaultOpenAll: true }}\n        location={{\n          pathname: location.pathname,\n        }}\n        menuItemRender={(item, dom) => <Link to={item.path!}>{dom}</Link>}\n        rightContentRender={HeaderRight}\n      >\n        {children}\n      </ProLayout>\n    </div>\n  );\n}\n","import { useHistory } from \"react-router-dom\";\nimport { Button } from \"antd\";\nimport { LoginForm } from \"@ant-design/pro-form\";\n\nimport { signin } from \"../libs/api/auth\";\n\nexport default function Signin() {\n  const history = useHistory();\n\n  const roles = [\"free\", \"basic\", \"pro\"];\n\n  const onSignin = async (role: string) => {\n    const result = await signin({ username: role, password: role });\n    if (result) {\n      history.replace(\"/user/profile\");\n    }\n  };\n\n  return (\n    <div\n      style={{\n        paddingTop: 100,\n        backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/bg.svg)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \" center 110px\",\n        backgroundSize: \"100%\",\n        backgroundColor: \"#f0f2f5\",\n        height: \"100vh\",\n      }}\n    >\n      <LoginForm\n        title={process.env.REACT_APP_NAME}\n        subTitle=\"请登录后访问\"\n        submitter={false}\n      >\n        {roles.map((role) => (\n          <Button\n            key={role}\n            type=\"primary\"\n            block\n            size=\"large\"\n            style={{ marginBottom: 20 }}\n            onClick={() => onSignin(role)}\n          >\n            登录为 {role.toUpperCase()} 用户\n          </Button>\n        ))}\n      </LoginForm>\n    </div>\n  );\n}\n","import { useUserSessionStore } from \"../libs/session\";\n\nexport default function UserProfilePage() {\n  const user = useUserSessionStore((store) => store.user);\n  return (\n    <div>\n      当前用户角色： {user?.role}\n      <br />\n      <br />\n      权限列表：\n      {Object.keys(user?.accessTags || {}).map((key) => (\n        <div key={key}>\n          {key} = {user?.accessTags[key]}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport { Button, message, Popconfirm } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ProTable, { ProColumns } from \"@ant-design/pro-table\";\nimport { ModalForm, ProFormInstance, ProFormText } from \"@ant-design/pro-form\";\n\nimport {\n  TeamMember,\n  useTeamMembers,\n  addTeamMember,\n  deleteTeamMember,\n  mutateTeamMembers,\n} from \"../libs/api\";\n\nexport default function TeamMembers() {\n  const { data, isValidating, mutate } = useTeamMembers();\n\n  const onDelete = async (item: any) => {\n    setConfirmLoading(true);\n    await deleteTeamMember(item.id);\n    setConfirmLoading(false);\n    await mutate();\n  };\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const columns: ProColumns<TeamMember, \"text\">[] = [\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"createdAt\",\n      valueType: \"date\",\n    },\n    {\n      title: \"操作\",\n      width: 180,\n      key: \"option\",\n      valueType: \"option\",\n      render: (_: any, item: any) => [\n        <Popconfirm\n          key=\"delete\"\n          title=\"确定删除吗？\"\n          onConfirm={() => onDelete(item)}\n          okButtonProps={{ loading: confirmLoading }}\n        >\n          <Button type=\"link\">删除</Button>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <ProTable<TeamMember>\n      search={false}\n      columns={columns}\n      dataSource={data}\n      loading={isValidating}\n      rowKey=\"id\"\n      pagination={{\n        pageSize: 20,\n        showQuickJumper: false,\n        showSizeChanger: false,\n      }}\n      request={() => mutate()}\n      dateFormatter=\"string\"\n      toolbar={{ title: \"Team Members\" }}\n      toolBarRender={() => [<AddMemberFormModal />]}\n    />\n  );\n}\n\nfunction AddMemberFormModal() {\n  const formRef = useRef<ProFormInstance>();\n\n  return (\n    <ModalForm<{ email: string }>\n      formRef={formRef}\n      title=\"添加团队成员\"\n      trigger={\n        <Button type=\"primary\">\n          <PlusOutlined /> 添加团队成员\n        </Button>\n      }\n      width={500}\n      autoFocusFirstInput\n      submitTimeout={2000}\n      onVisibleChange={(visible) => {\n        if (!visible) {\n          formRef.current?.resetFields();\n        }\n      }}\n      onFinish={async (values) => {\n        const result = await addTeamMember(values.email);\n\n        if (result.ok) {\n          message.success(\"添加成员成功\");\n          mutateTeamMembers();\n          return true;\n        }\n        if (result.error?.validationErrors?.find((x) => x.name === \"email\")) {\n          message.error(\"成员已存在\");\n          return true;\n        }\n        message.error(\"添加成员失败 \" + result.error?.message);\n      }}\n    >\n      <ProFormText name=\"email\" label=\"Email\" placeholder=\"请输入 Email\" />\n    </ModalForm>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport { Button, message, Popconfirm } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ProTable, { ProColumns } from \"@ant-design/pro-table\";\nimport { ModalForm, ProFormInstance, ProFormText } from \"@ant-design/pro-form\";\n\nimport {\n  Workspace,\n  useWorkspaces,\n  addWorkspace,\n  deleteWorkspace,\n  mutateWorkspaces,\n} from \"../libs/api\";\n\nexport default function Workspaces() {\n  const { data, isValidating, mutate } = useWorkspaces();\n\n  const onDelete = async (item: any) => {\n    setConfirmLoading(true);\n    await deleteWorkspace(item.id);\n    setConfirmLoading(false);\n    await mutate();\n  };\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const columns: ProColumns<Workspace, \"text\">[] = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"createdAt\",\n      valueType: \"date\",\n    },\n    {\n      title: \"操作\",\n      width: 180,\n      key: \"option\",\n      valueType: \"option\",\n      render: (_: any, item: any) => [\n        <Popconfirm\n          key=\"delete\"\n          title=\"确定删除吗？\"\n          onConfirm={() => onDelete(item)}\n          okButtonProps={{ loading: confirmLoading }}\n        >\n          <Button type=\"link\">删除</Button>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <ProTable<Workspace>\n      search={false}\n      columns={columns}\n      dataSource={data}\n      loading={isValidating}\n      rowKey=\"id\"\n      pagination={{\n        pageSize: 20,\n        showQuickJumper: false,\n        showSizeChanger: false,\n      }}\n      request={() => mutate()}\n      dateFormatter=\"string\"\n      toolbar={{ title: \"Workspaces\" }}\n      toolBarRender={() => [<AddWorkspaceFormModal />]}\n    />\n  );\n}\n\nfunction AddWorkspaceFormModal() {\n  const formRef = useRef<ProFormInstance>();\n\n  return (\n    <ModalForm<{ name: string }>\n      formRef={formRef}\n      title=\"添加 Workspace\"\n      trigger={\n        <Button type=\"primary\">\n          <PlusOutlined /> 添加 Workspace\n        </Button>\n      }\n      width={500}\n      autoFocusFirstInput\n      submitTimeout={2000}\n      onVisibleChange={(visible) => {\n        if (!visible) {\n          formRef.current?.resetFields();\n        }\n      }}\n      onFinish={async (values) => {\n        const result = await addWorkspace(values.name);\n\n        if (result.ok) {\n          message.success(\"添加 Workspace 成功\");\n          mutateWorkspaces();\n          return true;\n        }\n        message.error(\"添加 Workspace 失败 \" + result.error?.message);\n      }}\n    >\n      <ProFormText\n        name=\"name\"\n        label=\"Name\"\n        placeholder=\"请输入 Workspace 名称\"\n      />\n    </ModalForm>\n  );\n}\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport \"@ant-design/pro-form/dist/form.css\";\nimport \"@ant-design/pro-table/dist/table.css\";\nimport \"@ant-design/pro-layout/dist/layout.css\";\nimport \"@ant-design/pro-card/dist/card.css\";\n\nimport { Layout } from \"./layout/Layout\";\nimport Signin from \"./pages/Signin\";\nimport UserProfilePage from \"./pages/UserProfile\";\nimport TeamMembersPage from \"./pages/TeamMembers\";\nimport WorkspacesPage from \"./pages/Workspaces\";\nimport { signinUrl } from \"./libs/api\";\n\nexport function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path={signinUrl}>\n          <Signin />\n        </Route>\n        <Layout>\n          <Route path=\"/user/profile\">\n            <UserProfilePage />\n          </Route>\n          <Route path=\"/team-members\">\n            <TeamMembersPage />\n          </Route>\n          <Route path=\"/workspaces\">\n            <WorkspacesPage />\n          </Route>\n        </Layout>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { ConfigProvider } from \"antd\";\nimport zhCN from \"antd/lib/locale/zh_CN\";\nimport \"antd/dist/antd.css\";\nimport \"@ant-design/pro-form/dist/form.css\";\nimport \"@ant-design/pro-table/dist/table.css\";\nimport \"@ant-design/pro-layout/dist/layout.css\";\nimport \"@ant-design/pro-card/dist/card.css\";\n\nimport { SWRGlobalConfig } from \"./libs/swr\";\nimport { Routes } from \"./Routes\";\n\nfunction App() {\n  return (\n    <SWRGlobalConfig>\n      <ConfigProvider locale={zhCN}>\n        <Routes />\n      </ConfigProvider>\n    </SWRGlobalConfig>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}