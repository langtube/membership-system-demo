{"version":3,"sources":["libs/api/constants.ts","libs/api/auth.ts","libs/api/team-members.ts","libs/api/workspaces.ts","libs/http-client.ts","libs/swr.tsx","libs/session.ts","layout/HeaderRight.tsx","layout/Layout.tsx","pages/Signin.tsx","pages/UserProfile.tsx","pages/TeamMembers.tsx","pages/Workspaces.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["signinUrl","signinApiUrl","apiBaseUrl","profileApiUrl","teamMembersApiUrl","workspacesApiUrl","signin","data","a","httpClient","post","json","throwHttpErrors","response","result","ok","message","error","mutateTeamMembers","mutate","addTeamMember","email","deleteTeamMember","id","delete","mutateWorkspaces","addWorkspace","name","deleteWorkspace","ky","create","credentials","hooks","beforeError","err","status","document","location","replace","console","SWRGlobalConfig","children","value","fetcher","url","get","revalidateOnFocus","useUserSessionStore","set","user","init","fetchProfile","clear","HeaderRight","history","useHistory","clearSession","s","handleSwitchUser","style","height","padding","danger","type","onClick","icon","UserSwitchOutlined","Layout","useLocation","useState","loading","setLoading","initUserSession","useEffect","to","pathname","state","from","routes","path","UserOutlined","TeamOutlined","hideInMenu","Object","hasOwn","accessTags","AppstoreOutlined","ToolOutlined","logo","title","route","menu","defaultOpenAll","menuItemRender","item","dom","rightContentRender","Signin","onSignin","role","username","password","paddingTop","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","LoginForm","process","subTitle","submitter","map","block","size","marginBottom","toUpperCase","UserProfilePage","store","keys","key","TeamMembers","useSWR","isValidating","onDelete","setConfirmLoading","confirmLoading","columns","dataIndex","valueType","width","render","_","onConfirm","okButtonProps","search","dataSource","rowKey","pagination","pageSize","showQuickJumper","showSizeChanger","request","dateFormatter","toolbar","toolBarRender","AddMemberFormModal","formRef","useRef","ModalForm","trigger","PlusOutlined","autoFocusFirstInput","submitTimeout","onVisibleChange","visible","current","resetFields","onFinish","values","success","validationErrors","find","x","label","placeholder","Workspaces","AddWorkspaceFormModal","Routes","App","locale","zhCN","ReactDOM","StrictMode","getElementById"],"mappings":"mTAAaA,EAAY,eAIZC,EAAeC,mBACfC,EAAgBD,oBAEhBE,EAAoBF,oBACpBG,EAAmBH,kBCHzB,SAAeI,EAAtB,kC,4CAAO,WAAsBC,GAAtB,iBAAAC,EAAA,+EAEoBC,EAAWC,KAAKT,EAAc,CACnDU,KAAMJ,EACNK,iBAAiB,IAJhB,cAEGC,EAFH,gBAOkBA,EAASF,OAP3B,UAOGG,EAPH,QAQCD,EAASE,GARV,yCASMD,GATN,yDAYHE,IAAQC,MAAM,oEAAU,KAAGD,SAAS,KAZjC,2D,sBCYA,SAAeE,IAAtB,+B,4CAAO,sBAAAV,EAAA,sEACCW,YAAOf,GADR,4C,sBAIA,SAAegB,EAAtB,kC,4CAAO,WAA6BC,GAA7B,eAAAb,EAAA,+EAEoBC,EAAWC,KAAKN,EAAmB,CACxDO,KAAM,CAAEU,WAHP,cAEGR,EAFH,yBAKIA,GALJ,gCAOHG,IAAQC,MAAM,8DAAS,KAAGD,SAAS,KAPhC,0D,sBAWA,SAAeM,EAAtB,kC,4CAAO,WAAgCC,GAAhC,eAAAf,EAAA,+EAEoBC,EAAWe,OAAOpB,EAAmB,CAC1DO,KAAM,CAAEY,QAHP,cAEGV,EAFH,yBAKIA,GALJ,gCAOHG,IAAQC,MAAM,8DAAS,KAAGD,SAAS,KAPhC,0D,sBCfA,SAAeS,IAAtB,+B,4CAAO,sBAAAjB,EAAA,sEACCW,YAAOd,GADR,4C,sBAIA,SAAeqB,EAAtB,kC,4CAAO,WAA4BC,GAA5B,eAAAnB,EAAA,+EAEoBC,EAAWC,KAAKL,EAAkB,CACvDM,KAAM,CAAEgB,UAHP,cAEGd,EAFH,yBAKIA,GALJ,gCAOHG,IAAQC,MAAM,8DAAS,KAAGD,SAAS,KAPhC,0D,sBAWA,SAAeY,EAAtB,kC,4CAAO,WAA+BL,GAA/B,eAAAf,EAAA,+EAEoBC,EAAWe,OAAOnB,EAAkB,CACzDM,KAAM,CAAEY,QAHP,cAEGV,EAFH,yBAKIA,GALJ,gCAOHG,IAAQC,MAAM,8DAAS,KAAGD,SAAS,KAPhC,0D,iCC7BMP,EAAaoB,IAAGC,OAAO,CAClCC,YAAa,UACbnB,iBAAiB,EACjBoB,MAAO,CACLC,YAAa,CACX,SAACC,GAKC,OAJ4B,MAAxBA,EAAIrB,SAASsB,QAA0C,MAAxBD,EAAIrB,SAASsB,QAC9CC,SAASC,SAASC,QAAQtC,GAE5BuC,QAAQtB,MAAM,uBAAwBiB,GAC/BA,O,QCPFM,EAAkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAChC,OACE,cAAC,IAAD,CACEC,MAAO,CACLC,QAAQ,WAAD,4BAAE,WAAOC,GAAP,eAAApC,EAAA,+EAEkBC,EAAWoC,IAAID,GAFjC,WAEC/B,EAFD,QAGSE,GAHT,gCAImCF,EAASF,OAJ5C,oDAOEE,EAASF,QAPX,wCASLK,IAAQC,MAAM,2EAAY,KAAGD,UATxB,+DAAF,mDAAC,GAaR8B,mBAAmB,GAfvB,SAkBGL,K,+ECRMM,E,MAAsBjB,IAAyB,SAACkB,EAAKH,GAAN,MAAe,CACzEI,KAAM,KACNC,KAAK,WAAD,4BAAE,4BAAA1C,EAAA,yDACAyC,EAAOJ,IAAMI,KADb,gCAGWE,IAHX,QAGFF,EAHE,SAKAD,EAAI,CAAEC,SALN,2CAAF,kDAAC,GASLG,MAAO,WAEL,OADAJ,EAAI,CAAEC,KAAM,QACL,O,SAIIE,I,2EAAf,8BAAA3C,EAAA,+EAE2BC,EAAWoC,IAAI1C,GAF1C,cAEUU,EAFV,gBAGyBA,EAASF,OAHlC,UAGUG,EAHV,QAIQD,EAASE,GAJjB,yCAKaD,GALb,yDAQIE,IAAQC,MAAM,2EAAY,KAAGD,UARjC,2D,2CC7BO,SAASqC,IACd,IAAMC,EAAUC,cAEVC,EAAeT,GAAoB,SAACU,GAAD,OAAOA,EAAEL,SAE5CM,EAAgB,uCAAG,sBAAAlD,EAAA,sDACvBgD,IACAF,EAAQhB,QAAQ,KAFO,2CAAH,qDAItB,OACE,qBAAKqB,MAAO,CAAEC,OAAQ,OAAQC,QAAS,GAAvC,SACE,cAAC,IAAD,CACEC,QAAM,EACNC,KAAK,UACLC,QAASN,EACTO,KAAM,cAACC,EAAA,EAAD,IAJR,wCCHC,SAASC,EAAT,GAAoC,IAAlB1B,EAAiB,EAAjBA,SACjBJ,EAAW+B,cADuB,EAGVC,oBAAS,GAHC,mBAGjCC,EAHiC,KAGxBC,EAHwB,KAKlCtB,EAAOF,GAAoB,SAACU,GAAD,OAAOA,EAAER,QACpCuB,EAAkBzB,GAAoB,SAACU,GAAD,OAAOA,EAAEP,QASrD,GAPAuB,qBAAU,WACR,sBAAC,sBAAAjE,EAAA,sEACOgE,IADP,OAECD,GAAW,GAFZ,0CAAD,KAIC,CAACC,IAEAF,EACF,OAAO,KAGT,IAAKrB,EACH,OACE,cAAC,IAAD,CACEyB,GAAI,CACFC,SAAU3E,EACV4E,MAAO,CAAEC,KAAMxC,EAASsC,aAMhC,IAAMG,EAAS,CACbC,KAAM,IACND,OAAQ,CACN,CACEnD,KAAM,eACNsC,KAAM,cAACe,EAAA,EAAD,IACND,KAAM,iBAER,CACEpD,KAAM,eACNsC,KAAM,cAACgB,EAAA,EAAD,IACNF,KAAM,gBACNG,YAAaC,OAAOC,OAAOnC,EAAKoC,WAAY,uBAE9C,CACE1D,KAAM,YACNsC,KAAM,cAACqB,EAAA,EAAD,IACNP,KAAM,cACNG,YAAaC,OAAOC,OAAOnC,EAAKoC,WAAY,qBAE9C,CACE1D,KAAM,kBACNsC,KAAM,cAACsB,EAAA,EAAD,IACNR,KAAM,qBAKZ,OACE,qBACExD,GAAG,kBACHoC,MAAO,CACLC,OAAQ,SAHZ,SAME,cAAC,IAAD,CACE4B,KAAM,KACNC,MAAO,WACPC,MAAOZ,EACPa,KAAM,CAAEC,gBAAgB,GACxBvD,SAAU,CACRsC,SAAUtC,EAASsC,UAErBkB,eAAgB,SAACC,EAAMC,GAAP,OAAe,cAAC,IAAD,CAAMrB,GAAIoB,EAAKf,KAAf,SAAuBgB,KACtDC,mBAAoB3C,EATtB,SAWGZ,M,cCpFM,SAASwD,KACtB,IAAM3C,EAAUC,cAIV2C,EAAQ,uCAAG,WAAOC,GAAP,SAAA3F,EAAA,sEACMF,EAAO,CAAE8F,SAAUD,EAAME,SAAUF,IADzC,eAGb7C,EAAQhB,QAAQ,iBAHH,2CAAH,sDAOd,OACE,qBACEqB,MAAO,CACL2C,WAAY,IACZC,gBAAiB,eACjBC,iBAAkB,YAClBC,mBAAoB,gBACpBC,eAAgB,OAChBC,gBAAiB,UACjB/C,OAAQ,SARZ,SAWE,cAACgD,GAAA,EAAD,CACEnB,MAAOoB,yBACPC,SAAS,uCACTC,WAAW,EAHb,SArBU,CAAC,OAAQ,QAAS,OA0BnBC,KAAI,SAACb,GAAD,OACT,eAAC,IAAD,CAEEpC,KAAK,UACLkD,OAAK,EACLC,KAAK,QACLvD,MAAO,CAAEwD,aAAc,IACvBnD,QAAS,kBAAMkC,EAASC,IAN1B,gCAQOA,EAAKiB,cARZ,kBACOjB,UCnCF,SAASkB,KACtB,IAAMpE,EAAOF,GAAoB,SAACuE,GAAD,OAAWA,EAAMrE,QAClD,OACE,qFACWA,QADX,IACWA,OADX,EACWA,EAAMkD,KACf,uBACA,uBAHF,iCAKGhB,OAAOoC,MAAS,OAAJtE,QAAI,IAAJA,OAAA,EAAAA,EAAMoC,aAAc,IAAI2B,KAAI,SAACQ,GAAD,OACvC,gCACGA,EADH,aACWvE,QADX,IACWA,OADX,EACWA,EAAMoC,WAAWmC,KADlBA,S,sDCIH,SAASC,KAAe,IAAD,ETD7BC,YAAOtH,GSENG,EAD4B,EAC5BA,KAAMoH,EADsB,EACtBA,aAAcxG,EADQ,EACRA,OAEtByG,EAAQ,uCAAG,WAAO9B,GAAP,SAAAtF,EAAA,6DACfqH,GAAkB,GADH,SAETvG,EAAiBwE,EAAKvE,IAFb,cAGfsG,GAAkB,GAHH,SAIT1G,IAJS,2CAAH,sDAHsB,EASQkD,oBAAS,GATjB,mBAS7ByD,EAT6B,KASbD,EATa,KAW9BE,EAA4C,CAChD,CACEtC,MAAO,QACPuC,UAAW,SAEb,CACEvC,MAAO,2BACPuC,UAAW,YACXC,UAAW,QAEb,CACExC,MAAO,eACPyC,MAAO,IACPV,IAAK,SACLS,UAAW,SACXE,OAAQ,SAACC,EAAQtC,GAAT,MAAuB,CAC7B,cAAC,KAAD,CAEEL,MAAM,uCACN4C,UAAW,kBAAMT,EAAS9B,IAC1BwC,cAAe,CAAEhE,QAASwD,GAJ5B,SAME,cAAC,IAAD,CAAQ/D,KAAK,OAAb,2BALI,cAWZ,OACE,cAAC,KAAD,CACEwE,QAAQ,EACRR,QAASA,EACTS,WAAYjI,EACZ+D,QAASqD,EACTc,OAAO,KACPC,WAAY,CACVC,SAAU,GACVC,iBAAiB,EACjBC,iBAAiB,GAEnBC,QAAS,kBAAM3H,KACf4H,cAAc,SACdC,QAAS,CAAEvD,MAAO,gBAClBwD,cAAe,iBAAM,CAAC,cAACC,GAAD,QAK5B,SAASA,KACP,IAAMC,EAAUC,mBAEhB,OACE,cAACC,GAAA,EAAD,CACEF,QAASA,EACT1D,MAAM,uCACN6D,QACE,eAAC,IAAD,CAAQvF,KAAK,UAAb,UACE,cAACwF,GAAA,EAAD,IADF,2CAIFrB,MAAO,IACPsB,qBAAmB,EACnBC,cAAe,IACfC,gBAAiB,SAACC,GACD,IAAD,EAATA,IACH,UAAAR,EAAQS,eAAR,SAAiBC,gBAGrBC,SAAQ,uCAAE,WAAOC,GAAP,mBAAAvJ,EAAA,sEACeY,EAAc2I,EAAO1I,OADpC,UACFR,EADE,4DAKJA,EAASE,GALL,uBAMNC,IAAQgJ,QAAQ,wCAChB9I,IAPM,mBAQC,GARD,wBAU8BL,EAASF,OAVvC,qBAUFuB,EAVE,kBAWJA,GAXI,UAWJA,EAAK+H,wBAXD,aAWJ,EAAuBC,MAAK,SAACC,GAAD,MAAkB,UAAXA,EAAExI,SAXjC,wBAYNX,IAAQC,MAAM,kCAZR,mBAaC,GAbD,QAeRD,IAAQC,MAAM,wCAAYiB,EAAIlB,SAftB,4CAAF,sDAhBV,SAkCE,cAAC,KAAD,CAAaW,KAAK,QAAQyI,MAAM,QAAQC,YAAY,+BCjG3C,SAASC,KAAc,IAAD,ETD5B5C,YAAOrH,GSENE,EAD2B,EAC3BA,KAAMoH,EADqB,EACrBA,aAAcxG,EADO,EACPA,OAEtByG,EAAQ,uCAAG,WAAO9B,GAAP,SAAAtF,EAAA,6DACfqH,GAAkB,GADH,SAETjG,EAAgBkE,EAAKvE,IAFZ,cAGfsG,GAAkB,GAHH,SAIT1G,IAJS,2CAAH,sDAHqB,EASSkD,oBAAS,GATlB,mBAS5ByD,EAT4B,KASZD,EATY,KAW7BE,EAA2C,CAC/C,CACEtC,MAAO,OACPuC,UAAW,QAEb,CACEvC,MAAO,2BACPuC,UAAW,YACXC,UAAW,QAEb,CACExC,MAAO,eACPyC,MAAO,IACPV,IAAK,SACLS,UAAW,SACXE,OAAQ,SAACC,EAAQtC,GAAT,MAAuB,CAC7B,cAAC,KAAD,CAEEL,MAAM,uCACN4C,UAAW,kBAAMT,EAAS9B,IAC1BwC,cAAe,CAAEhE,QAASwD,GAJ5B,SAME,cAAC,IAAD,CAAQ/D,KAAK,OAAb,2BALI,cAWZ,OACE,cAAC,KAAD,CACEwE,QAAQ,EACRR,QAASA,EACTS,WAAYjI,EACZ+D,QAASqD,EACTc,OAAO,KACPC,WAAY,CACVC,SAAU,GACVC,iBAAiB,EACjBC,iBAAiB,GAEnBC,QAAS,kBAAM3H,KACf4H,cAAc,SACdC,QAAS,CAAEvD,MAAO,cAClBwD,cAAe,iBAAM,CAAC,cAACsB,GAAD,QAK5B,SAASA,KACP,IAAMpB,EAAUC,mBAEhB,OACE,cAACC,GAAA,EAAD,CACEF,QAASA,EACT1D,MAAM,yBACN6D,QACE,eAAC,IAAD,CAAQvF,KAAK,UAAb,UACE,cAACwF,GAAA,EAAD,IADF,6BAIFrB,MAAO,IACPsB,qBAAmB,EACnBC,cAAe,IACfC,gBAAiB,SAACC,GACD,IAAD,EAATA,IACH,UAAAR,EAAQS,eAAR,SAAiBC,gBAGrBC,SAAQ,uCAAE,WAAOC,GAAP,iBAAAvJ,EAAA,sEACekB,EAAaqI,EAAOpI,MADnC,UACFd,EADE,4DAKJA,EAASE,GALL,uBAMNC,IAAQgJ,QAAQ,uCAChBvI,IAPM,mBAQC,GARD,wBAU8BZ,EAASF,OAVvC,QAUFuB,EAVE,OAWRlB,IAAQC,MAAM,uCAAqBiB,EAAIlB,SAX/B,4CAAF,sDAhBV,SA8BE,cAAC,KAAD,CACEW,KAAK,OACLyI,MAAM,OACNC,YAAY,gDCjGb,SAASG,KACd,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOzF,KAAM/E,EAAb,SACE,cAACiG,GAAD,MAEF,eAAC9B,EAAD,WACE,cAAC,IAAD,CAAOY,KAAK,gBAAZ,SACE,cAACsC,GAAD,MAEF,cAAC,IAAD,CAAOtC,KAAK,gBAAZ,SACE,cAAC0C,GAAD,MAEF,cAAC,IAAD,CAAO1C,KAAK,cAAZ,SACE,cAACuF,GAAD,cCRGG,OAVf,WACE,OACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAgBC,OAAQC,IAAxB,SACE,cAACH,GAAD,SCVRI,IAASzC,OACP,cAAC,IAAM0C,WAAP,UACE,cAAC,GAAD,MAEFzI,SAAS0I,eAAe,W","file":"static/js/main.86254728.chunk.js","sourcesContent":["export const signinUrl = \"/auth/signin\";\n\nexport const apiBaseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport const signinApiUrl = apiBaseUrl + \"/auth/signin\";\nexport const profileApiUrl = apiBaseUrl + \"/user/profile\";\n\nexport const teamMembersApiUrl = apiBaseUrl + \"/team-members\";\nexport const workspacesApiUrl = apiBaseUrl + \"/workspaces\";\n","import { message } from \"antd\";\n\nimport { httpClient } from \"../http-client\";\nimport { signinApiUrl } from \"./constants\";\n\nexport async function signin(data: any) {\n  try {\n    const response = await httpClient.post(signinApiUrl, {\n      json: data,\n      throwHttpErrors: false,\n    });\n\n    const result = await response.json();\n    if (response.ok) {\n      return result;\n    }\n  } catch (e: any) {\n    message.error(\"登陆失败：\" + e?.message, 5000);\n  }\n}\n","import { message } from \"antd\";\nimport useSWR, { mutate } from \"swr\";\n\nimport { httpClient } from \"../http-client\";\nimport { teamMembersApiUrl } from \"./constants\";\n\nexport type TeamMember = {\n  id: string;\n  ownerId: string;\n  email: string;\n  createdAt: Date;\n};\n\nexport function useTeamMembers() {\n  return useSWR(teamMembersApiUrl);\n}\n\nexport async function mutateTeamMembers() {\n  await mutate(teamMembersApiUrl);\n}\n\nexport async function addTeamMember(email: string) {\n  try {\n    const response = await httpClient.post(teamMembersApiUrl, {\n      json: { email },\n    });\n    return response;\n  } catch (e: any) {\n    message.error(\"添加失败\" + e?.message, 5000);\n  }\n}\n\nexport async function deleteTeamMember(id: string) {\n  try {\n    const response = await httpClient.delete(teamMembersApiUrl, {\n      json: { id },\n    });\n    return response;\n  } catch (e: any) {\n    message.error(\"删除失败\" + e?.message, 5000);\n  }\n}\n","import { message } from \"antd\";\nimport useSWR, { mutate } from \"swr\";\n\nimport { httpClient } from \"../http-client\";\nimport { workspacesApiUrl } from \"./constants\";\n\nexport type Workspace = {\n  id: string;\n  ownerId: string;\n  name: string;\n  createdAt: Date;\n};\n\nexport function useWorkspaces() {\n  return useSWR(workspacesApiUrl);\n}\n\nexport async function mutateWorkspaces() {\n  await mutate(workspacesApiUrl);\n}\n\nexport async function addWorkspace(name: string) {\n  try {\n    const response = await httpClient.post(workspacesApiUrl, {\n      json: { name },\n    });\n    return response;\n  } catch (e: any) {\n    message.error(\"添加失败\" + e?.message, 5000);\n  }\n}\n\nexport async function deleteWorkspace(id: string) {\n  try {\n    const response = await httpClient.delete(workspacesApiUrl, {\n      json: { id },\n    });\n    return response;\n  } catch (e: any) {\n    message.error(\"删除失败\" + e?.message, 5000);\n  }\n}\n","import ky, { HTTPError } from \"ky\";\nimport { signinUrl } from \"./api\";\n\nexport const httpClient = ky.create({\n  credentials: \"include\",\n  throwHttpErrors: false,\n  hooks: {\n    beforeError: [\n      (err: HTTPError) => {\n        if (err.response.status === 401 || err.response.status === 403) {\n          document.location.replace(signinUrl);\n        }\n        console.error(\"ky hooks beforeError\", err);\n        return err;\n      },\n    ],\n  },\n});\n","import { SWRConfig } from \"swr\";\nimport { message } from \"antd\";\n\nimport { ServerExceptionDto } from \"./api\";\nimport { httpClient } from \"./http-client\";\n\nexport const SWRGlobalConfig = ({ children }: any) => {\n  return (\n    <SWRConfig\n      value={{\n        fetcher: async (url) => {\n          try {\n            const response = await httpClient.get(url);\n            if (!response.ok) {\n              const dto: ServerExceptionDto = await response.json();\n              throw dto;\n            }\n            return response.json();\n          } catch (e: any) {\n            message.error(\"获取数据失败 \" + e?.message);\n            throw e;\n          }\n        },\n        revalidateOnFocus: false,\n      }}\n    >\n      {children}\n    </SWRConfig>\n  );\n};\n","import { message } from \"antd\";\nimport create from \"zustand\";\n\nimport { profileApiUrl } from \"./api/constants\";\nimport { httpClient } from \"./http-client\";\n\nexport type User = {\n  id: string;\n  role: string;\n  accessTags: Record<string, string | number>;\n};\n\nexport type UserSessionStore = {\n  user: User | null;\n  init: () => Promise<void>;\n  clear: () => void;\n};\n\nexport const useUserSessionStore = create<UserSessionStore>((set, get) => ({\n  user: null,\n  init: async () => {\n    let user = get().user;\n    if (!user) {\n      user = await fetchProfile();\n      if (user) {\n        set({ user });\n      }\n    }\n  },\n  clear: () => {\n    set({ user: null });\n    return true;\n  },\n}));\n\nasync function fetchProfile() {\n  try {\n    const response = await httpClient.get(profileApiUrl);\n    const result = await response.json();\n    if (response.ok) {\n      return result;\n    }\n  } catch (e: any) {\n    message.error(\"获取数据失败 \" + e?.message);\n  }\n}\n","import { Button } from \"antd\";\nimport { UserSwitchOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useUserSessionStore } from \"../libs/session\";\n\nexport function HeaderRight() {\n  const history = useHistory();\n\n  const clearSession = useUserSessionStore((s) => s.clear);\n\n  const handleSwitchUser = async () => {\n    clearSession();\n    history.replace(\"/\");\n  };\n  return (\n    <div style={{ height: \"100%\", padding: 4 }}>\n      <Button\n        danger\n        type=\"primary\"\n        onClick={handleSwitchUser}\n        icon={<UserSwitchOutlined />}\n      >\n        切换用户\n      </Button>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  UserOutlined,\n  ToolOutlined,\n  TeamOutlined,\n  AppstoreOutlined,\n} from \"@ant-design/icons\";\nimport ProLayout from \"@ant-design/pro-layout\";\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\n\nimport { useUserSessionStore } from \"../libs/session\";\nimport { HeaderRight } from \"./HeaderRight\";\nimport { signinUrl } from \"../libs/api\";\n\nexport function Layout({ children }: any) {\n  const location = useLocation();\n\n  const [loading, setLoading] = useState(true);\n\n  const user = useUserSessionStore((s) => s.user);\n  const initUserSession = useUserSessionStore((s) => s.init);\n\n  useEffect(() => {\n    (async () => {\n      await initUserSession();\n      setLoading(false);\n    })();\n  }, [initUserSession]);\n\n  if (loading) {\n    return null;\n  }\n\n  if (!user) {\n    return (\n      <Redirect\n        to={{\n          pathname: signinUrl,\n          state: { from: location.pathname },\n        }}\n      />\n    );\n  }\n\n  const routes = {\n    path: \"/\",\n    routes: [\n      {\n        name: \"User Profile\",\n        icon: <UserOutlined />,\n        path: \"/user/profile\",\n      },\n      {\n        name: \"Team Members\",\n        icon: <TeamOutlined />,\n        path: \"/team-members\",\n        hideInMenu: !Object.hasOwn(user.accessTags, \"access-team-member\"),\n      },\n      {\n        name: \"Workspace\",\n        icon: <AppstoreOutlined />,\n        path: \"/workspaces\",\n        hideInMenu: !Object.hasOwn(user.accessTags, \"access-workspace\"),\n      },\n      {\n        name: \"Another Service\",\n        icon: <ToolOutlined />,\n        path: \"/public-service\",\n      },\n    ],\n  };\n\n  return (\n    <div\n      id=\"test-pro-layout\"\n      style={{\n        height: \"100vh\",\n      }}\n    >\n      <ProLayout\n        logo={null}\n        title={\"App name\"}\n        route={routes}\n        menu={{ defaultOpenAll: true }}\n        location={{\n          pathname: location.pathname,\n        }}\n        menuItemRender={(item, dom) => <Link to={item.path!}>{dom}</Link>}\n        rightContentRender={HeaderRight}\n      >\n        {children}\n      </ProLayout>\n    </div>\n  );\n}\n","import { useHistory } from \"react-router-dom\";\nimport { Button } from \"antd\";\nimport { LoginForm } from \"@ant-design/pro-form\";\n\nimport { signin } from \"../libs/api/auth\";\n\nexport default function Signin() {\n  const history = useHistory();\n\n  const roles = [\"free\", \"basic\", \"pro\"];\n\n  const onSignin = async (role: string) => {\n    const result = await signin({ username: role, password: role });\n    if (result) {\n      history.replace(\"/user/profile\");\n    }\n  };\n\n  return (\n    <div\n      style={{\n        paddingTop: 100,\n        backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/bg.svg)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \" center 110px\",\n        backgroundSize: \"100%\",\n        backgroundColor: \"#f0f2f5\",\n        height: \"100vh\",\n      }}\n    >\n      <LoginForm\n        title={process.env.REACT_APP_NAME}\n        subTitle=\"请登录后访问\"\n        submitter={false}\n      >\n        {roles.map((role) => (\n          <Button\n            key={role}\n            type=\"primary\"\n            block\n            size=\"large\"\n            style={{ marginBottom: 20 }}\n            onClick={() => onSignin(role)}\n          >\n            登录为 {role.toUpperCase()} 用户\n          </Button>\n        ))}\n      </LoginForm>\n    </div>\n  );\n}\n","import { useUserSessionStore } from \"../libs/session\";\n\nexport default function UserProfilePage() {\n  const user = useUserSessionStore((store) => store.user);\n  return (\n    <div>\n      当前用户角色： {user?.role}\n      <br />\n      <br />\n      权限列表：\n      {Object.keys(user?.accessTags || {}).map((key) => (\n        <div key={key}>\n          {key} = {user?.accessTags[key]}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport { Button, message, Popconfirm } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ProTable, { ProColumns } from \"@ant-design/pro-table\";\nimport { ModalForm, ProFormInstance, ProFormText } from \"@ant-design/pro-form\";\n\nimport {\n  TeamMember,\n  useTeamMembers,\n  addTeamMember,\n  deleteTeamMember,\n  mutateTeamMembers,\n} from \"../libs/api\";\nimport { ServerExceptionDto } from \"../libs/api\";\n\nexport default function TeamMembers() {\n  const { data, isValidating, mutate } = useTeamMembers();\n\n  const onDelete = async (item: any) => {\n    setConfirmLoading(true);\n    await deleteTeamMember(item.id);\n    setConfirmLoading(false);\n    await mutate();\n  };\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const columns: ProColumns<TeamMember, \"text\">[] = [\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"createdAt\",\n      valueType: \"date\",\n    },\n    {\n      title: \"操作\",\n      width: 180,\n      key: \"option\",\n      valueType: \"option\",\n      render: (_: any, item: any) => [\n        <Popconfirm\n          key=\"delete\"\n          title=\"确定删除吗？\"\n          onConfirm={() => onDelete(item)}\n          okButtonProps={{ loading: confirmLoading }}\n        >\n          <Button type=\"link\">删除</Button>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <ProTable<TeamMember>\n      search={false}\n      columns={columns}\n      dataSource={data}\n      loading={isValidating}\n      rowKey=\"id\"\n      pagination={{\n        pageSize: 20,\n        showQuickJumper: false,\n        showSizeChanger: false,\n      }}\n      request={() => mutate()}\n      dateFormatter=\"string\"\n      toolbar={{ title: \"Team Members\" }}\n      toolBarRender={() => [<AddMemberFormModal />]}\n    />\n  );\n}\n\nfunction AddMemberFormModal() {\n  const formRef = useRef<ProFormInstance>();\n\n  return (\n    <ModalForm<{ email: string }>\n      formRef={formRef}\n      title=\"添加团队成员\"\n      trigger={\n        <Button type=\"primary\">\n          <PlusOutlined /> 添加团队成员\n        </Button>\n      }\n      width={500}\n      autoFocusFirstInput\n      submitTimeout={2000}\n      onVisibleChange={(visible) => {\n        if (!visible) {\n          formRef.current?.resetFields();\n        }\n      }}\n      onFinish={async (values) => {\n        const response = await addTeamMember(values.email);\n        if (!response) {\n          return;\n        }\n        if (response.ok) {\n          message.success(\"添加成员成功\");\n          mutateTeamMembers();\n          return true;\n        }\n        const err: ServerExceptionDto = await response.json();\n        if (err?.validationErrors?.find((x) => x.name === \"email\")) {\n          message.error(\"成员已存在\");\n          return true;\n        }\n        message.error(\"添加成员失败 \" + err.message);\n      }}\n    >\n      <ProFormText name=\"email\" label=\"Email\" placeholder=\"请输入 Email\" />\n    </ModalForm>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport { Button, message, Popconfirm } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ProTable, { ProColumns } from \"@ant-design/pro-table\";\nimport { ModalForm, ProFormInstance, ProFormText } from \"@ant-design/pro-form\";\n\nimport {\n  Workspace,\n  useWorkspaces,\n  addWorkspace,\n  deleteWorkspace,\n  mutateWorkspaces,\n} from \"../libs/api\";\nimport { ServerExceptionDto } from \"../libs/api\";\n\nexport default function Workspaces() {\n  const { data, isValidating, mutate } = useWorkspaces();\n\n  const onDelete = async (item: any) => {\n    setConfirmLoading(true);\n    await deleteWorkspace(item.id);\n    setConfirmLoading(false);\n    await mutate();\n  };\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const columns: ProColumns<Workspace, \"text\">[] = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"createdAt\",\n      valueType: \"date\",\n    },\n    {\n      title: \"操作\",\n      width: 180,\n      key: \"option\",\n      valueType: \"option\",\n      render: (_: any, item: any) => [\n        <Popconfirm\n          key=\"delete\"\n          title=\"确定删除吗？\"\n          onConfirm={() => onDelete(item)}\n          okButtonProps={{ loading: confirmLoading }}\n        >\n          <Button type=\"link\">删除</Button>\n        </Popconfirm>,\n      ],\n    },\n  ];\n\n  return (\n    <ProTable<Workspace>\n      search={false}\n      columns={columns}\n      dataSource={data}\n      loading={isValidating}\n      rowKey=\"id\"\n      pagination={{\n        pageSize: 20,\n        showQuickJumper: false,\n        showSizeChanger: false,\n      }}\n      request={() => mutate()}\n      dateFormatter=\"string\"\n      toolbar={{ title: \"Workspaces\" }}\n      toolBarRender={() => [<AddWorkspaceFormModal />]}\n    />\n  );\n}\n\nfunction AddWorkspaceFormModal() {\n  const formRef = useRef<ProFormInstance>();\n\n  return (\n    <ModalForm<{ name: string }>\n      formRef={formRef}\n      title=\"添加 Workspace\"\n      trigger={\n        <Button type=\"primary\">\n          <PlusOutlined /> 添加 Workspace\n        </Button>\n      }\n      width={500}\n      autoFocusFirstInput\n      submitTimeout={2000}\n      onVisibleChange={(visible) => {\n        if (!visible) {\n          formRef.current?.resetFields();\n        }\n      }}\n      onFinish={async (values) => {\n        const response = await addWorkspace(values.name);\n        if (!response) {\n          return;\n        }\n        if (response.ok) {\n          message.success(\"添加 Workspace 成功\");\n          mutateWorkspaces();\n          return true;\n        }\n        const err: ServerExceptionDto = await response.json();\n        message.error(\"添加 Workspace 失败 \" + err.message);\n      }}\n    >\n      <ProFormText\n        name=\"name\"\n        label=\"Name\"\n        placeholder=\"请输入 Workspace 名称\"\n      />\n    </ModalForm>\n  );\n}\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport \"@ant-design/pro-form/dist/form.css\";\nimport \"@ant-design/pro-table/dist/table.css\";\nimport \"@ant-design/pro-layout/dist/layout.css\";\nimport \"@ant-design/pro-card/dist/card.css\";\n\nimport { Layout } from \"./layout/Layout\";\nimport Signin from \"./pages/Signin\";\nimport UserProfilePage from \"./pages/UserProfile\";\nimport TeamMembersPage from \"./pages/TeamMembers\";\nimport WorkspacesPage from \"./pages/Workspaces\";\nimport { signinUrl } from \"./libs/api\";\n\nexport function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path={signinUrl}>\n          <Signin />\n        </Route>\n        <Layout>\n          <Route path=\"/user/profile\">\n            <UserProfilePage />\n          </Route>\n          <Route path=\"/team-members\">\n            <TeamMembersPage />\n          </Route>\n          <Route path=\"/workspaces\">\n            <WorkspacesPage />\n          </Route>\n        </Layout>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { ConfigProvider } from \"antd\";\nimport zhCN from \"antd/lib/locale/zh_CN\";\nimport \"antd/dist/antd.css\";\nimport \"@ant-design/pro-form/dist/form.css\";\nimport \"@ant-design/pro-table/dist/table.css\";\nimport \"@ant-design/pro-layout/dist/layout.css\";\nimport \"@ant-design/pro-card/dist/card.css\";\n\nimport { SWRGlobalConfig } from \"./libs/swr\";\nimport { Routes } from \"./Routes\";\n\nfunction App() {\n  return (\n    <SWRGlobalConfig>\n      <ConfigProvider locale={zhCN}>\n        <Routes />\n      </ConfigProvider>\n    </SWRGlobalConfig>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}